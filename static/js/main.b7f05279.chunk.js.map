{"version":3,"sources":["API.js","App.js","index.js"],"names":["apiWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","Date","toDateString","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"oOAKaA,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACCC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEU,uBACdC,EADc,EACdA,KADc,kBASfA,GATe,2CAAH,sD,eCqCRC,EArCH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACC,UAAVc,EAAEC,IADO,gCAEQjB,EAAWC,GAFnB,OAELQ,EAFK,OAIXK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASZ,OACE,sBAAKM,UAAU,iBAAf,UACE,uBAAOC,KAAK,OAAOD,UAAU,SAASE,YAAY,cAAcC,MAAOpB,EAAOqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QAAQG,WAAYT,IACpIF,EAAQY,MACP,sBAAKP,UAAU,OAAf,UACE,6BAAI,IAAIQ,MAAOC,iBACf,qBAAIT,UAAU,YAAd,UACE,+BAAOL,EAAQe,OACf,8BAAMf,EAAQgB,IAAIC,aAEpB,sBAAKZ,UAAU,YAAf,UACGa,KAAKC,MAAMnB,EAAQY,KAAKQ,MACzB,2CAEF,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYgB,IAAG,4CAAuCrB,EAAQA,QAAQ,GAAGsB,KAA1D,WAAyEC,IAAKvB,EAAQA,QAAQ,GAAGwB,cAC/H,4BAAIxB,EAAQA,QAAQ,GAAGwB,wBC7BnCC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.b7f05279.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'b98bfe3849ef13254126907a51556d94';\r\n\r\nexport const apiWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}","import React, { useState } from 'react';\n\nimport { apiWeather } from './API';\nimport './App.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = async (e) => {\n    if (e.key === 'Enter') {\n      const data = await apiWeather(query);\n\n      setWeather(data);\n      setQuery('');\n    }\n  }\n\n  return (\n    <div className=\"main-container\">\n      <input type=\"text\" className=\"search\" placeholder=\"Search city\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search} />\n      {weather.main && (\n        <div className=\"city\">\n          <p>{new Date().toDateString()}</p>\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}